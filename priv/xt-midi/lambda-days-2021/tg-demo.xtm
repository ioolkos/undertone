;;;; The part of this example that is responsible to actually playing the score.
;;;;

;; For use in setting up song in the LFE undertone REPL, having executed the
;; following:
;;   (undertone.repl.extempore:start)
;;
;; Then:
;;   (load "priv/xt-midi/lambda-days-2021/init.xtm")
;;
;; Then, in the REPL, load the required functions:
;;   (load "priv/xt-midi/lambda-days-2021/util.xtm")
;;   (load "priv/xt-midi/lambda-days-2021/funs.xtm")
;;
;; After that, load the notes, chords, and arpeggios:
;;   (load "priv/xt-midi/lambda-days-2021/notes.xtm")

;; From Extempore, you can do:
(define prefix "/Users/dmcgreggor/lab/lfe/undertone/priv/xt-midi/lambda-days-2021/")
;;(define prefix "/Users/oubiwann/lab/lfe/undertone/priv/xt-midi/lambda-days-2021/")

(sys:load (string-append prefix "init.xtm"))
(sys:load (string-append prefix "util.xtm"))
(sys:load (string-append prefix "funs.xtm"))
(sys:load (string-append prefix "notes.xtm"))
(sys:load (string-append prefix "moog-ipad-minimoog.xtm"))

;; Now you're ready to set up the MIDI channels (coupled to tracks in the DAW)
;; for the score ... and play it:

(define primary-midi-device-id 5)
(define *midiout* (pm_create_output_stream primary-midi-device-id))

(define track1-chan 0)
(define track2-chan 1)
(define track3-chan 2)
(define track4-chan 3)
(define track5-chan 4)
(define track6-chan 5)
(define track7-chan 6)
(define track8-chan 7)
(define track9-chan 8)

(define seq-1 (list c3 c4 c3 c4 a#3 g3))
(define seq-1 (list c3 c3 a#3 g3))
(define seq-1 (list c3 c3 a#3 g3 c4 c4))
(define seq-1 (list c3 c3 a#3 g3 c4 c3 c4 g3))

(define play
  (lambda (beat)
    (play-seq beat 4 track1-chan seq-1)))


(play-seq (*metro* 'get-beat 4) 2 track1-chan seq-1)

(play (*metro* 'get-beat 2))


(define midi-loop
  (lambda (beat dur seq-1)
    (mplay *midiout*
           (car seq-1)
           80
           dur
           0)
    (callback (*metro* (+ beat (* 1 dur)))
              'midi-loop
              (+ beat dur)
              dur
              (append (cdr seq-1) (list (car seq-1))))))

(midi-loop (*metro* 'get-beat 4) 1/2 seq-1)

(*metro* 'set-tempo 108)

(define midi-loop
  (lambda (beat dur) #t))

(define (circular-list . objects)
  (append objects objects))


(define play-seq-2
  (lambda (time plst)
    (mplay *midiout* (car plst) 80 11025 track1-chan)
    (if (not (null? (cdr plst)))
        (callback (+ time 10000) 'play-seq-2 (+ time 11025) (cdr plst)))))

(play-seq-2 (now) seq-1)
