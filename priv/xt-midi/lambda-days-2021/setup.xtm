;;;; TBD
;;;;

;; For use in setting up song in the LFE undertone REPL, having executed the
;; following:
;;   (undertone.repl.extempore:start)
(sys:load "libs/external/portmidi.xtm")
(sys:load "libs/core/pattern-language.xtm")

(pm_initialize)
(pm_print_devices)

;; Then, in the REPL, load the required functions:
;;   (run "priv/xt-midi/lambda-days-2021/util.xtm")
;;   (run "priv/xt-midi/lambda-days-2021/funs.xtm")
;;
;; After that, load the notes, chords, and arpeggios:
;;   (run "priv/xt-midi/lambda-days-2021/notes.xtm")

;; XXX let's change the name of 'run' to 'load' (or alias it)

;;; MIDI + DAW Setup
(define *midiout* (pm_create_output_stream 8))
(define track1-chan 0)
(define track2-chan 1)
(define track3-chan 2)
(define track4-chan 3)
(define track5-chan 4)
(define track6-chan 5)
(define track7-chan 6)
(define track8-chan 7)

(define play1
  (lambda ()
    (let ((beat (*metro* 'get-beat 4)))
      (play-seq beat 4 track1-chan bass-prog1)
      (play-seq beat 4 track2-chan bass-prog1)
      (play-seq beat 4 track3-chan bass-prog1)
      (play-seq beat 4 track4-chan bass-prog1)
      (play-chords beat 4 track5-chan chords-prog1)
      (play-chords beat 4 track6-chan chords-prog1)
      (play-seq beat 1 track7-chan prog1))))

(define play2
  (lambda ()
    (let ((beat (*metro* 'get-beat 4)))
      (play-seq beat 4 track1-chan bass-prog1)
      (play-seq beat 4 track2-chan bass-prog1)
      (play-seq beat 2 track3-chan bass-prog2)
      (play-seq beat 2 track4-chan bass-prog2)
      (play-chords beat 2 track5-chan chords-prog2)
      (play-chords beat 4 track6-chan chords-prog2)
      (play-seq beat 1 track7-chan prog2))))

(define play3
  (lambda ()
    (let ((beat (*metro* 'get-beat 4)))
      (play-seq beat 4 track1-chan bass-prog1)
      (play-seq beat 4 track2-chan bass-prog1)
      (play-seq beat 2 track3-chan bass-prog3)
      (play-seq beat 2 track4-chan bass-prog3)
      (play-chords beat 4 track5-chan chords-prog3)
      (play-chords beat 4 track6-chan chords-prog3)
      (play-seq beat 1 track7-chan prog3))))


;(define song (append prog1
;                     prog2
;                     prog3
;                     prog1
;                     prog4
;                     prog1
;                     prog2
;                     prog3
;                     prog1
;                     prog2))

(define play-c
  (lambda ()
    (let ((beat (*metro* 'get-beat 4)))
      (play-chords beat 4 track5-chan chords-prog3)
      (play-chords beat 4 track6-chan chords-prog3)
      (play-seq beat 1 track7-chan prog3))))
